import streamlit as st
from src.agent import app  # Importar el flujo de trabajo de LangGraph
import pyperclip  # Para copiar texto al portapapeles

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Generador de Correos Electr√≥nicos",
    page_icon="üìß",
    layout="centered",
)

# T√≠tulo y descripci√≥n
st.title("üìß Generador de Correos Electr√≥nicos")
st.markdown("""
    **Genera correos electr√≥nicos personalizados para ventas.**  
    Ingresa el nombre de la empresa y obt√©n un correo listo para usar.
""")

# Funci√≥n para ejecutar el flujo de trabajo
def run_langgraph_workflow(company):
    """Ejecuta el flujo de trabajo en LangGraph y retorna el resultado."""
    entradas = {"company": company, "num_steps": 0}
    
    resultado = None
    for salida in app.stream(entradas):
        for clave, valor in salida.items():
            if clave == "state_printer":
                resultado = valor["final_email"]
    
    return resultado

# Entrada de datos
company = st.text_input("Nombre de la empresa", placeholder="Ej: Mercado Libre")

# Bot√≥n para generar el correo
if st.button("Generar Correo Electr√≥nico"):
    if not company:
        st.error("‚ö†Ô∏è Por favor, ingresa el nombre de la empresa.")
    else:
        with st.spinner("Generando correo..."):
            salida = run_langgraph_workflow(company)["final_email"]
        
        if salida:
            st.success("‚úÖ Correo generado con √©xito!")
            st.subheader("‚úâÔ∏è Correo Generado")
            st.text_area("Vista Previa", salida, height=300, key="email_output")
            
            # Bot√≥n para copiar al portapapeles
            if st.button("üìã Copiar al portapapeles"):
                pyperclip.copy(salida)
                st.success("Texto copiado al portapapeles!")
        else:
            st.error("‚ùå No se pudo generar el correo. Verifica los datos ingresados.")